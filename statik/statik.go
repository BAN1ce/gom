package statik

import (
		"github.com/rakyll/statik/fs"
)

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x009#uE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00app.js'use strict';\n\n(function(){\n  var profile = \"heap\";\n  var cumsort = true;\n  var data = {\n    max: 0,\n    goroutine: [],\n    thread: [],\n    block: [],\n  };\n\n  refresh();\n\n  $(\".cpu\").on(\"click\", function() {\n    profile = \"profile\";\n    refresh();\n  });\n  $(\".heap\").on(\"click\", function() {\n    profile = \"heap\";\n    refresh();\n  });\n  $(\".refresh\").on(\"click\", function() {\n    refresh(true);\n  });\n  $(\".filter\").on(\"keyup\", function() {\n    refresh();\n  });\n  $('#cumsort').on('change', function() {\n    cumsort = $(this).is(':checked');\n    refresh();\n  });\n\n  var moreStats = function() {\n    $.ajax('/stats').done(function(d) {\n      appendChartData(data.goroutine, d.goroutine);\n      appendChartData(data.thread, d.thread);\n      drawCharts();\n      setTimeout(function() {\n        moreStats();\n      }, 500);\n    });\n  };\n\n  moreStats();\n\n  function refresh(force) {\n    // TODO: cancel the existing request if it's not ciompleted.\n    $('.results').html('Loading, be patient... CPU profile takes 30 seconds.');\n    var f = $('.filter').val();\n    $.get('/p', { profile: profile, filter: f, cumsort: cumsort, force: !!force })\n        .done(function(items) {\n      var html = '';\n      for (var i=0; i<items.length; i++) {\n        var item = items[i];\n        var row = '';\n        row += '<td class=\"bar\"><div style=\"width:' + item['score']*100 + 'px\"></div></td>'\n        row += '<td class=\"num\">' + item['flat'] + '</td>';\n        row += '<td class=\"num\">' + item['flat_perc'] + '</td>';\n        row += '<td class=\"num\">' + item['flatsum_perc'] + '</td>';\n        row += '<td class=\"num\">' + item['cum'] + '</td>';\n        row += '<td class=\"num\">' + item['cum_perc'] + '</td>';\n        row += '<td>' + item['name'] + '</td>';\n        html += '<tr>' + row + '</tr>';\n      }\n      $(\".results\").html('<table>' + html + '</table>');\n    }).fail(function(data) {\n      $('.results').html(data);\n    });\n  };\n\n  function appendChartData(target, val) {\n    if (val > data.max) {\n      data.max = val;\n    }\n    target.pop();\n    if (target.length > 265) {\n      target.shift();\n    }\n    target.push(val);\n    // Add zeros, because sparkline draws the chart relatively,\n    // depending on the min-max range of the dataset.\n    target.push(0);\n  }\n\n  function drawCharts() {\n    var opts = {\n      type: 'line',\n      height: '40px',\n      lineColor: '#1ABC9C',\n      lineWidth: 1,\n      fillColor: '#1ABC9C',\n      spotColor: '#1ABC9C',\n      minSpotColor: '#1ABC9C',\n      maxSpotColor: '#1ABC9C',\n      chartRangeMax: data.max\n    };\n    $(\"#gorotinechart\").sparkline(data.goroutine, opts);\n    $(\"#threadchart\").sparkline(data.thread, opts);\n  }\n})()\nPK\x07\x08v\xbc\x1f\xa3h\n\x00\x00h\n\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xac\xbd\xbaF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00index.html<!doctype html>\n<html>\n<head>\n  <title>gom</title>\n  <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/flat-ui/2.0/css/flat-ui.css\">\n  <style>\n    @import ur(//cdn.jsdelivr.net/flat-ui/2.0/fonts/Flat-UI-Icons.dev.svg);\n    h2 {font-size: 18px; margin: 30px 0px 0px 0px;}\n    .chart{margin: 10px 0px; background: #ECF0F1; border-radius: 5px; padding-top: 3px;}\n    .btn {padding: 2px 13px;}\n    .right{float:right}\n    .filter{width:100%}\n    .container{ width: 800px; margin: 50px auto;}\n    .results { margin: 20px 0px; font-family: monospace; }\n    .results table { width: 8000px; }\n    .results td.num {text-align: right; width: 50px;}\n    .results .bar { width: 100px; }\n    .results .bar div { background: #BDC3C7; height: 10px; border-radius: 4px; }\n    #cumsort { width: 20px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n\n    <h2>goroutines</h2>\n    <p>number of execution stacks from all current goroutines</p>\n    <div id=\"gorotinechart\" class=\"chart\"></div>\n\n    <h2>thread</h2>\n    <p>number of execution stacks from all stack traces that led to the creation of new OS threads</p>\n    <div id=\"threadchart\" class=\"chart\"></div>\n\n    <!--\n    <h2>block</h2>\n    <p>number of stack traces that led to blocking on synchronization primitives</p>\n    <div id=\"blockedchart\" class=\"chart\"></div>\n    -->\n\n    <div class=\"row\">\n        <h2>runtime profiles</h2>\n        <span class=\"fui-alert-circle\"></span>\n        <p>\n        <span class=\"fui-repeat\"></span>\n          <button type=\"button\" class=\"cpu btn btn-primary\">CPU</button>\n          <button type=\"button\" class=\"heap btn btn-primary\">Heap</button>\n          <input checked=\"checked\" id=\"cumsort\" class=\"checkbox\" type=\"checkbox\">Cumulative sort\n          <button type=\"button\" class=\"refresh btn right\">Refresh</button>\n        </p>\n        <input type=\"text\" class=\"filter\" placeholder=\"Focus by regex... You can filter by package, type or function name.\">\n        <div class=\"row\"><div class=\"results\"></div></div>\n      </div>\n\n    <p>Source code is available on <a href=\"https://github.com/rakyll/gom\">github.com/rakyll/gom</a>.</p>\n  </div>\n  <!-- TODO(jbd): Add the remote resources to the public folder,\n  otherwise I can't use this program on no-Wifi flights. -->\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery-sparklines/2.1.2/jquery.sparkline.min.js\"></script>\n  <script type=\"text/javascript\" src=\"/app.js\"></script>\n</body>\n</html>\nPK\x07\x08ja\x84J\xcf	\x00\x00\xcf	\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x009#uEv\xbc\x1f\xa3h\n\x00\x00h\n\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x00\x00\x00\x00app.jsPK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xac\xbd\xbaFja\x84J\xcf	\x00\x00\xcf	\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x9c\n\x00\x00index.htmlPK\x05\x06\x00\x00\x00\x00\x02\x00\x02\x00l\x00\x00\x00\xa3\x14\x00\x00\x00\x00"
	fs.Register(data)
}
